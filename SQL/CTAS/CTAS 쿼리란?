▶︎ CTAS 쿼리란?
▶︎ 정의 : CTAS(Create Table As Select)는 선택(SELECT)된 데이터셋을 새로운 테이블로 생성할 대 사용되는 SQL 구문이다.
        해당 구문은 기존 테이블의 데이터를 기반으로 (원본 데이터를 훼손하지 않고) 새로운 테이블을 만들고자 할 때 유용하기 때문에
        테이블 백업이나 데이터 분석용 테이블을 생성하는 데 주로 활용된다.
  → 이름 그대로 SELECT 쿼리의 결과를 그대로 가져와서 새로운 테이블을 만드는 명령어로 테이블의 구조를 미리 만들고
    데이터를 따로 넣는 게 아니라, 이 명령어 하나로 테이블 생성과 데이터 입력을 한 방에 끝내는 것이다.

  → 그럼 이걸 왜 쓸끼? CTAS는 여러 상황에서 편리하다.
    1. 테이블 백업용 : 기존 테이블의 데이터를 그대로 복사해서 백업본을 만들 때 아주 간단하게 쓸 수 있다.
                    특정 조건에 맞는 데이터만 골라서 따로 저장할 수도 있다.

    2. 데이터 요약 및 분석 : 복잡한 쿼리(JOIN이나 그룹화 함수를 사용한)의 결과를 따로 저장해서 보고서를 만들거나 분석할 때 유용하다.
                         매번 복잡한 쿼리를 실행할 필요 없이, 미리 만들어 둔 요약 테이블을 조회하면 되니깐 훨신 빠르다.

    3. 성능 향상 : 자주 사용하는 조회 결과를 미리 테이블로 만들어 두면, 나중에 데이터를 불러오는 속도가 엄청나게 빨라진다.
                 일종의 중간 결과 저장소 처럼 사용되기도 한다.

    4. 테스트용 데이터 생성 : 기존 테이블의 데이터를 변형하거나 일부만 가져와서 개발 및 테스트용 테이블을 만들 때 편리하다.


기본적인 형태)
CREATE TABLE new_table AS
SELECT column1, column2, ...
FROM existing_table
WHERE condition;

▶︎ 특징
1. 생성되는 테이블 구조
  → 새로 생성되는 테이블의 구조는 SELECT 구문의 의해 결정된다.
    때문에 SELECT * ~ 구문을 통해 대상 테이블의 모든 컬럼을 복사하거나, SELECT column1, column2, ... 구문을 통해 특정 컬럼을
    지정하여 복사할 수도 있다. 또한 이렇게 생성된 컬럼은 기존 컬럼의 데이터 타입을 그대로 가져가게 된다.

2. 원본 데이터 유지
  → CTAS 구문은 새로 새성되는 테이블에 기존 테이블의 전체 데이터 또는 조건부 데이터를 복사한다.
    때문에 기존 테이블의 원본 데이터는 훼손되지 않고 그대로 유지된다는 특징이 있다.

3. 인덱스 및 제약 조건
  → CTAS 구문을 통해 생성되는 테이블은 NOT NULL을 제외한 기존 테이블의 인덱스나 제약 조건을 상속받지 않습니다.
    때문에 필요한 경우 CTAS 구문으로 테이블을 생성한 뒤 인덱스 및 제약 조건을 걸어 주어야 한다.

4. 데이터 타입 제한
  → LONG 및 LONG RAW 타입의 컬럼은 복사 시 오류가 발생할 수 있으며, CLOB, BLOB 타입의 컬럼은 복사를 지원한다.
    → LONG : VARCHAR 타입을 확장한 데이터 타입으로 대용량의 문자열을 저장할 수 있으며, 한 테이블에서 하나의 컬럼에만 선안한다.
    → LONG RAW : RAQ 타입을 확장한 데이터 타입으로 대용량의 바이너리 데이터를 저장할 수 있으며, 한 테이블에서 하나의 컬럼에만 선언할 수 있다.
    → BLOB : 대용량의 바이너리 데이터를 저장하는 데이터 타입으로 한 테이블에서 여러 컬럼에 대해 선언할 수 있다.
    → CLOB : 대용량의 문자열 데이터를 저장하는 데이터 타입으로 한 테이블에서 여러 컬럼에 대해 선언할 수 있다.

예시)
1. 테이블 및 전체 데이터 복사
CREATE TABLE copy_employees AS
SELECT *
FROM employees;

2. 테이블 및 조건부 데이터 복사
CREATE TABLE copy_employees_deptno_100 AS
SELECT *
FROM employees
WHERE deptno = 100;

3. 데이터를 제외한 테이블 구조만 복사
- WITH NO DATA 옵션을 지원하는 Oracle의 경우
CREATE TABLE copy_employees_no_data AS
SELECT *
FROM employees
WITH NO DATA;

- WITH NO DATA 옵션을 지원하지 않는 경우
CREATE TABLE copy_employees_no_data AS
SELECT *
FROM employees
WHERE 1=2;

→ 오라클의 경우WITH NOT DATA 옵션을 지원하기 때문에 해당 옵션을 사용하여 데이터를 제외한 테이블 구조만 복사할 수 있다.
  하지만 WITH NO DATA 옵션을 지원하지 않는 MySQL 등의 경우 WHERE 1=2와 같이 SELECT에 대한 조건을 false으로 줌으로써 테이블의 구조만 복사할 수 있다.
