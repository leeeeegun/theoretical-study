[정렬 정의]
• 정렬이란?
  - 정렬이란 데이터를 특정 기준에 따라 순서대로 나열한 것
  - 정렬을 하면 이진 탐색이 가능해져 검색 속도를 올릴 수 있음

• 정렬 알고리즘이란?
  - N개의 숫자가 주어졌으 ㄹ때 이를 사용자가 지정한 기준에 맞게 정렬하는 알고리즘

[Stable Sort vs Not Stable Sort]
• Stable Sort
  - 어떠한 정렬 알고리즘으로 정렬 했을 때, 항상 중복된 키 값이 처음 위치 순서대로 정렬 되었다면 Stable Sort 라고 함
    예) 정렬 전 : 3 4(초) 2 7 4(노)
    예) 정렬 후 : 2 3 4(초) 4(노) 7
      -> 정렬 후 동일한 숫자의 순서가 동일할 경우 Stable Sort 라고 함

• Not Stable Sort
  - 어떠한 정렬 알고리즘으로 정렬 했을 때, 중복된 키 값이 처음 위치 순서대로 정렬이 되어 있지 않다면 Not Stable Sort 라고 함
    예) 정렬 전 : 3 4(초) 2 7 4(노)
    예) 정렬 후 : 2 3 4(노) 4(초) 7
      -> 중복 요소를 기준으로 색상이 다른 4가 정렬 후, 정렬 전과 순서가 동일하지 않을 경우 Not Stable Sort 라고 함

[In-Place-Sort vs Not In-Place Sort]
• In-Place
  - 정렬 했을 때, 원소들의 개수에 비해 충분히 무시할 만한 저장 공간을 더 사용하는 정령 알고리즘
    예) In-Place: 2 4 3 7 4
      -> 4와 3 두 요소를 교환하여 정렬을 할 경우 교환을 위한 temp 변수 이외의 저장공간이 더 필요 없는 것과 같이 충분히 무시할 만한 저장 공간을 더 사용하는 정렬을 In-Place 정렬이라 함

• Not In-Place
  - 정렬 했을 때, 원소들의 개수에 비례하여 저장 공간을 더 사용하는 정렬 알고리즘
    에) Not In-Place: 2 4 3 7 4
    예) 새로운 배열:     2 [3] [] [] []
      -> 위의 숫자와 같이 새로운 배열을 생성하여 요소를 삽입하는 정렬을 할 경우 요소 N개 만큼의 새로운 저장 공간을 필요로 하는 것과 같이 소들의 개수에 비례하여 저장 종간을 더 사용하는 정렬을 Not In-Place 정렬이라 함

-------------------------------------------

★ 비교 기반 알고리즘
 1. 기초적인 정렬 알고리즘 -O(n^2)
  - 버블 정렬 (Bubble Sort)
  - 선택 정렬 (Selection Sort)
  - 삽입 정렬 (Insertion Sort)
    -> 일반적으로 삽입 정렬, 선택 정렬, 버블 정렬 순으로 속도가 빠름

 2. 향상된 정렬 알고리즘 -O(n log n)
  - 퀵 정렬 (Quick Sort)
  - 병합 정렬 (Merge Sort)
  - 힙 정렵 (Heap Sort)
    -> 평균적으로 O(n log n) 시간 복잡도를 가짐, 하지만 퀵 정렬은 최악의 상황에서는 O(n^2)의 시간 복잡도를 가짐

3. Java의 Arrays.sort() 사용하는 알고리즘 -O(n log n) 평균 시간
  - 듀얼 피벗 퀵소트 (Dual Pivot Quick Sort) : 원시 타입 배열일 때 사용 (int[], long[], char[] 등등...)
  - 팀소트 (TimSort) : 객체 배열일 때 사용 (Integer[], String[] 등등...)
    -> 2가지 알고리즘을 사용하는 이유는 데이터 유형에 따라 최적화된 알고리즘을 사용하기 위함임
