▶ 정의 : 전체 배열의 중앙을 비교하여 찾으려 하는 값이 작으면 왼쪽, 크면 오른쪽에서 부터 다시 탐색하는 방법으로
          탐색양을 절반씩 줄여가며 찾는 탐색 알고리즘이다.
  → 순차 검색 보다는 효율적인 방법이지만, 데이터가 반드시 크기순으로 정렬되어 있어야 한다는 조건이 있다.

▶ 시간 복잡도 : O(lon n)

▶ 특징
1. 전제조건
 1-1. 미리 정렬이 되어 있어여 한다.
 1-2. 입력 시 마다 재정렬을 필요로 한다.
 1-3. 데이터의 비교가 가능해야 한다. (ex. 숫자..etc)
2. [출력 < 입력]의 상황 시, 입렵 시 마다 재정렬을 해야 하기 때문에 느려질 수 있다.
3. 데이터 리스트의 중간값을 확인한다.

▶ 장/단점
  → 장점 : 데이터 양이 아무리 많아져도 검색 속도가 매우 빠르다.
  → 단점 : 데이터가 반드시 정렬되어 있어야만 사용할 수 있다.


예시)
두꺼운 사전에서 단어를 찾을 때, 대충 중간쯤을 펴보고 찾으려는 단어가 그 페이지 보다 앞에 있는지 뒤에 있는지에 따라
앞부분이나 뒷부분을 다시 펼쳐보는 것과 같다.
